name: Release

on:
  # Trigger on any new tag that starts with "v" (e.g., v2.4.0).
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the repo
      - uses: actions/checkout@v3
        with:
          # fetch-depth=0 so GoReleaser can read all tags/commits.
          fetch-depth: 0  

      # 2. Set up Go
      - uses: actions/setup-go@v4
        with:
          # This will look at your go.mod to pick the Go version, or you can hardcode e.g. "go-version: 1.20"
          go-version-file: 'go.mod'
          cache: true
      # 3. Import GPG private key with debugging
      - name: Import GPG private key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          echo "Verifying imported keys:"
          gpg --list-secret-keys --keyid-format LONG
          
          # Create a non-interactive trust script
          echo -e "5\ny\n" | gpg --batch --no-tty --command-fd 0 --expert --edit-key ${{ secrets.GPG_FINGERPRINT }} trust
          
          # Alternative trust command if above fails
          echo "Setting key to ultimate trust level"
          echo "${{ secrets.GPG_FINGERPRINT }}:6:" | gpg --batch --import-ownertrust
        env:
          GPG_TTY: /dev/null

      # 4. Run GoReleaser with modified signing options
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          # Tell GPG not to use TTY
          GPG_TTY: /dev/null